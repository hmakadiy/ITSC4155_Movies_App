<!DOCTYPE html>
<html lang="en">
  
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content=
        "width=device-width, 
        initial-scale=1.0">
        
    
</head>

<%- include('./partials/header.ejs')%>

<body>
    <center>
    	<div class="game-area">
			<h1> Movie Title Guessing Game </h1>
			<div id="input_boxes"></div> 
			<h3> Guessed Letters: </h3>
			<h4 id="guessed_letters"> None </h4>
			<h3> Letters in Movie Title: </h3>
			<h4 id="valid_letters"> None </h4>
			<h3> Guesses </h3>
			<h4 id="guesses"> 0 </h4>
			<input  class="homebutton" type="submit" onclick="checkWord()" value="Submit" id="submit_btn">
			<input  class="homebutton" type="submit" onclick="newGame()" value="New Game" id="submit_btn">
		</div>
    </center>
  
</body>
<%- include('./partials/footer.ejs')%>
<script>
	
	// DOM Elements
	const textGuessed = document.getElementById('guessed_letters');
	const textValid = document.getElementById('valid_letters');
	const textGuesses = document.getElementById('guesses');
	const box = document.getElementById('input_boxes');
    
	// Game variables 
	let movies = [];
	let word = '';
	let n = 0;
	let maxGuesses = n;
	var guesses = 0;
	const guessedLetters = new Set();
	const validLetters = new Set();
	
	async function getMovies() {
		const response = await fetch("movies.json");
		const json = await response.json();
		movies = json.movies;
		newGame();
	}
	
	getMovies();
	
	// Set game variables to new values, reset page
	function newGame() {
		let rng = Math.floor(Math.random() * movies.length);
		word = movies[rng].toUpperCase();
		console.log(word);
		n = word.length;
		maxGuesses = n;
		guesses = 0;
		guessedLetters.clear();
		validLetters.clear();
		box.replaceChildren();
		textGuessed.innerText = 'None';
		textValid.innerText = 'None';
		textGuesses.innerText = '0';
		generateBoxes();
	}
	
	// Generate boxes for movie title
	function generateBoxes() {
		for (let i = 0; i < word.length; i++) {
			var newBox = document.createElement('input');
			newBox.setAttribute('class', 'letter-control');
			newBox.setAttribute('type', 'text');
			newBox.setAttribute('id', 'l'+String(i));
			newBox.setAttribute('name', 'l'+String(i));
			newBox.setAttribute('onclick', 'boxClick(\'l'+String(i)+'\')');
			newBox.setAttribute('oninput', 'boxInput(\'l'+String(i)+'\')');
			newBox.setAttribute('required', '');
			if (word[i] == ' ') newBox.disabled = true;
			box.appendChild(newBox);
		}
	}
	
	// Move to next open box on input
	function boxInput(id) {
		var depth = 0;
		id = 'l' + String((parseInt(id.substring(1))+1) % n);
		var next = document.getElementById(id);
		while (next.disabled && depth < n+1) {
			id = 'l' + String((parseInt(id.substring(1))+1) % n);
			next = document.getElementById(id);
			depth += 1;
		}
		if (next.disabled) return;
		next.focus();
		next.select();
	}
	
	// Highlight box text on click
	function boxClick(id) {
		document.getElementById(id).select();
	}
	
	// Check if current word is valid
	function checkWord() {
		var valid = true;
		guesses++;
		for (let i = 0; i < word.length; i++) {
			var curBox = document.getElementById('l'+String(i));
			let curChar = curBox.value.toUpperCase();
			if (word[i].toUpperCase() == ' ') continue;
			if (curChar === word[i].toUpperCase()) {
				curBox.disabled = true;
				curBox.style.color = "green";
			} else valid = false;
			
			guessedLetters.add(curChar);
			if (word.includes(curChar)) validLetters.add(curChar);
			
		}
		textGuessed.innerText = '';
		textValid.innerText = '';
		textGuesses.innerText = String(guesses);
		for (let letter of guessedLetters.values()) textGuessed.innerText += letter;
		for (let letter of validLetters.values()) textValid.innerText += letter;
		if (textValid.innerText === '') textValid.innerText = 'None';
		if (valid) {
			alert("You won!");
		}
	}
	
	// Enter key listener
	document.onkeydown=function(evt){
        var keyCode = evt ? (evt.which ? evt.which : evt.keyCode) : event.keyCode;
        if(keyCode == 13) {
        	checkWord();
        	boxInput('l'+String(n-1));
        }
    }
</script>
</html>
